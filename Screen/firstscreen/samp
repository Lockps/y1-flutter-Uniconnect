// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:like_button/like_button.dart';

//*=====================PATH-FILE======================//

import 'package:mobileapp_project/Screen/firstscreen/postscreen.dart';
import 'package:mobileapp_project/color/selectedcolor.dart';

class Feed extends StatefulWidget {
  const Feed({Key? key});

  @override
  State<Feed> createState() => _FeedState();
}

class _FeedState extends State<Feed> {
  MyPalettesColor myPalettesColor = MyPalettesColor();
  CollectionReference _datapost = FirebaseFirestore.instance.collection("Post");

  bool isPost = false;

  Future<void> _refreshdata() async {
    QuerySnapshot querySnapshot = await FirebaseFirestore.instance
        .collection("Post")
        .orderBy("date", descending: true)
        .get();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        centerTitle: true,
        shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.vertical(bottom: Radius.circular(10))),
        backgroundColor: myPalettesColor.purple,
        title: Text(
          "All post today",
        ),
      ),
      body: Column(
        children: [
          AnimatedContainer(
            duration: Duration(milliseconds: 500),
            decoration: BoxDecoration(color: Colors.amber),
            height: isPost ? MediaQuery.of(context).size.height * 0.15 : 0,
            child: Container(
              color: Colors.transparent,
              width: MediaQuery.of(context).size.width * 0.8,
              height: MediaQuery.of(context).size.height * 0.2,
              child: Column(
                children: [
                  Spacer(),
                  Container(
                    color: Colors.red,
                    width: MediaQuery.of(context).size.width * 0.8,
                    height: MediaQuery.of(context).size.height * 0.05,
                    child: TextFormField(),
                  ),
                  Spacer(),
                  SizedBox(
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Spacer(),
                        InkWell(
                          child: Container(
                            decoration: BoxDecoration(
                              color: Colors.red,
                              borderRadius: BorderRadius.all(
                                Radius.circular(20),
                              ),
                            ),
                            width: 50,
                            height: 50,
                            child: Icon(Icons.camera),
                          ),
                        ),
                        Spacer(),
                        InkWell(
                          child: Container(
                            decoration: BoxDecoration(
                              color: Colors.amber,
                              borderRadius: BorderRadius.all(
                                Radius.circular(20),
                              ),
                            ),
                            width: 50,
                            height: 50,
                            child: Icon(Icons.file_download),
                          ),
                        ),
                        Spacer()
                      ],
                    ),
                  ),
                  Spacer()
                ],
              ),
            ),
          ),
          Expanded(
            child: Padding(
              padding: const EdgeInsets.only(top: 10),
              child: RefreshIndicator(
                onRefresh: _refreshdata,
                color: Colors.red,
                child: StreamBuilder(
                  stream: FirebaseFirestore.instance
                      .collection("Post")
                      .orderBy("date", descending: true)
                      .snapshots(),
                  builder: (context, AsyncSnapshot<QuerySnapshot> snapshot) {
                    if (!snapshot.hasData) {
                      return Center(
                        child: CircularProgressIndicator(),
                      );
                    }
                    return ListView.builder(
                        itemCount: snapshot.data!.docs.length,
                        itemBuilder: (context, int index) {
                          final doc = snapshot.data!.docs[index];
                          final data = doc.data() as Map<String, dynamic>;
                          final name = data["name"] as String?;
                          final essays = data["warning"] as String?;
                          return Container(
                            height: MediaQuery.of(context).size.height * 0.20,
                            decoration: BoxDecoration(
                              color: myPalettesColor.yellow.withAlpha(70),
                              border: Border(
                                  bottom: BorderSide(
                                      width: 1.5,
                                      color: Colors.black.withAlpha(50))),
                            ),
                            child: Column(
                              children: [
                                Spacer(),
                                Container(
                                  color: Colors.transparent,
                                  height:
                                      MediaQuery.of(context).size.height * 0.05,
                                  child: Row(children: [
                                    CircleAvatar(
                                      radius: 30,
                                    ),
                                    Text("$name")
                                  ]),
                                ),
                                Container(
                                  decoration:
                                      BoxDecoration(color: Colors.transparent),
                                  height:
                                      MediaQuery.of(context).size.height * 0.08,
                                  //*DATA
                                  child: ListTile(
                                    title: Text(
                                      essays ?? "Doesn't found header",
                                      style: TextStyle(fontSize: 20),
                                    ),
                                  ),
                                ),
                                Container(
                                  color: Colors.transparent,
                                  height:
                                      MediaQuery.of(context).size.height * 0.04,
                                  child: Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      Spacer(),
                                      IconButton(
                                          onPressed: () {},
                                          icon: Icon(Icons.thumb_up)),
                                      Spacer(),
                                      IconButton(
                                          onPressed: () {},
                                          icon: Icon(Icons.comment)),
                                      Spacer(),
                                      IconButton(
                                          onPressed: () {},
                                          icon: Icon(Icons.share)),
                                      Spacer(),
                                    ],
                                  ),
                                ),
                                Spacer()
                              ],
                            ),
                          );
                        });
                  },
                ),
              ),
            ),
          ),
        ],
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          setState(() {
            isPost = !isPost;
          });
        },
        backgroundColor: myPalettesColor.pink,
        child: Icon(
          Icons.post_add,
          color: Colors.black.withAlpha(150),
        ),
      ),
    );
  }
}
